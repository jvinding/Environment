. ${ENVIRONMENT_DIR}/admin

export ANDROID_HOME=/Users/Shared/android-sdk-macosx

export SERVERPATH=${HOME}/Projects/perch-devops/scripts

export CDPATH=.:~:~/Projects

export PGDATA=/usr/local/var/postgres

SECRETS=(thrivehive_amq_creds grader_secrets)
PLUGINS=(git git_flow java ssh android ssh-agent z ios_dev docker nvm rbenv)

safe_source ${ENVIRONMENT_DIR}/mac_shortcuts

alias agnt="ag --ignore-dir=test"

alias wifi_ip='ifconfig en0 | grep "\<inet\>" | awk "{print \$2}"'
copy_wifi_ip() {
    local ip=$(wifi_ip)
    echo $ip | tr -d '[:space:]' | pbcopy
    echo "Copied '${ip}' to the clipboard"
}

export PROJECT_DIR=$HOME/Projects
safe_source $PROJECT_DIR/closely-common-scripts/bash/project-aliases
safe_source $PROJECT_DIR/closely-common-scripts/bash/ssh-aliases
safe_source $PROJECT_DIR/closely-common-scripts/bash/db-aliases

environment_require_lib projects
projects_load \
    closely_api \
    closely_promote \
    closely_perch \
    closely_crawl \
    closely_metadata \
    closely_pfw \
    closely_boost \
    closely_inbox \
    closely_cc \
    closely_mc \
    closely_listener \
    thrivehive_mvn \
    thrivehive_mocker \
    thrivehive_guidance \
    thrivehive_grader \
    thrivehive_onboarding \
    thrivehive_communicator \
    thrivehive_spring_common \
    thrivehive_corkboard \
    thrivehive_ninjacat

pui() {
    ssh bucket1 "jvinding/user_info.sh $@" | pbcopy
    echo "Info copied to pastboard"
}

pwl() {
    ssh bucket1 "jvinding/watchlist.sh $@" | pbcopy
    echo "Info copied to pastboard"
}

psv() {
    ssh bucket1 "jvinding/selected_venue.sh $@" | pbcopy
    echo "Info copied to pastboard"
}

if ! which dropdb > /dev/null && which pgcli > /dev/null; then
    dropdb() {
        local hostname=
        while getopts "h:?" opt; do
            case $opt in
                h)
                    hostname="-h ${OPTARG}"
                    ;;
                \?)
                    echo "Invalid option: -$OPTARG" >&2
                    ;;
            esac
        done
        shift $(( OPTIND - 1 ))
        pgcli ${hostname} "drop database ${dbname};"
    }
fi
