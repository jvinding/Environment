SERVICES_BASE_DIR="${PROJECT_DIR}/Services"

geocoder() {
    cd $SERVICES_BASE_DIR/geocoder
}

lms() {
    cd $SERVICES_BASE_DIR/location-match-service/
}

#
# Location Service
#
locs() {
    export ASPNETCORE_ENVIRONMENT=Development
    cd $SERVICES_BASE_DIR/starport
}
locs_run() {
    locs
    dotnet run -p ./LocationService.Api/LocationService.Api.csproj
}
locs_swagger() {
    locs
    cd ./LocationService.Api
    dotnet build
    dotnet swagger tofile --output starport-swagger.json ./bin/Debug/netcoreapp2.2/LocationService.Api.dll v1
}

locs_db() {
    docker exec -it mysql_dev -uroot -p
}

locs_db_setup() {
    locs
    dotnet build
    dotnet ef database update -p ./LocationService.Api/LocationService.Api.csproj
}

locs_db_migration_create() {
    local migration_name=${1:-}
    if [ -z "$migration_name" ]; then
        echo "Must specify a migration name" >&2
    else
        locs
        cd ./LocationService.Persistence
        dotnet ef --startup-project ../LocationService.Api/ migrations add "$migration_name"
    fi
}

locs_db_migrations_run() {
    locs
    dotnet build
    dotnet ef database update -p ./LocationService.Api/LocationService.Api.csproj
}

locs_setup() {
    ## docker pull mysql/mysql-server
    ## docker run -d --restart='always' -e "MYSQL_ROOT_HOST=%" -p 127.0.0.1:3306:3306 --name=mysql_dev mysql/mysql-server:5.7
    ## I couldn't log in if I set the password using: -e 'MYSQL_ROOT_PASSWORD=<PASSWORD>'
    ## So, instead, do the following:
    ## docker logs mysql_dev
    ## docker exec -it mysql_dev mysql -uroot -p
    ## set password = password('ThriveHive@2019');
    ## set password for 'root'@'%' = PASSWORD('ThriveHive@2019');
    ## locs_db_setup

## This stuff probably isn't needed with the above command
    ## set password for 'root'@'%' = PASSWORD('ThriveHive@2019');
    ## get the root pw fromthe logs
    ## docker exec -it mysql_dev mysql -uroot -p
    ## set password for 'root'@'%' = PASSWORD('ThriveHive@2019');
    ## create database location_service
    ## use location_service;
    echo
}
