CMS_SERVICE_NAME=content-management-svc
boreas() {
    local component=${1:-}
    cd $PROJECT_DIR/boreas
    if [ -n "$component" ]; then
        cd "./components/${component}-parent/${component}"
    fi
}

boreas_cms() {
    boreas "${CMS_SERVICE_NAME}"
}

boreas_stop() {
    boreas
    mvn clean
}

boreas_simple_clean() {
    boreas
    find . -type d -name target | xargs rm -rf
}

## Helpers
boreas_is_valid_environment() {
    local environment=${1:-}
    if [ "$environment" != "development" ] && [ "$environment" != "staging" ]; then
        echo "Valid environments are: ['development', 'staging']" >&2
        return 1
    fi
}

boreas_component_find_base_dir() {
    local component=${1:-}
    if [ -z "$component" ]; then
        echo "must specify a component" >&2
        return 1
    fi
    if [ -d "components/${component}-parent" ]; then
        echo -n "components/${component}-parent/${component}"
    else
        echo -n "components/${component}"
    fi
}

boreas_grpc_build() {
    local component=${1:-}
    if [ -z "$component" ]; then
        echo "must specify a component" >&2
        return 1
    fi
    boreas
    mvn install -pl ":${component}-grpc-client" -am
}

boreas_component_test() {
    local component=${1:-}
    if [ -z "$component" ]; then
        echo "must specify a component" >&2
        return 1
    fi
    boreas
    mvn test -pl ":${component}" -am
}

boreas_component_code_coverage() {
    local component=${1:-}
    if [ -z "$component" ]; then
        echo "must specify a component" >&2
        return 1
    fi
    boreas
    mvn test jacoco:report -pl ":${component}" -am
    if [ -d "components/${component}-parent" ]; then
        open "components/${component}-parent/${component}/target/site/jacoco/index.html"
    else
        open "components/${component}/target/site/jacoco/index.html"
    fi
}

boreas_component_generate_jwt() {
    local component=${1:-}
    if [ -z "$component" ]; then
        echo "must specify a component" >&2
        return 1
    fi

    local environment=${2:-}
    boreas_is_valid_environment "$environment" || return 1

    boreas
    local base_dir="$(boreas_component_find_base_dir "$component")/src/test/resources/jwt/token-definitions/"

    jq ".iss = \"logrhythm-${environment}\"" "${base_dir}/all-admin.json" > "${base_dir}/temp.json"
    mvn -q -am -pl ":${component}" test -PskipTests -Pgenerate-token -Dexec.args="/jwt/token-definitions/temp.json" 2> /dev/null | tr -d '\n' | tee >(pbcopy)
    rm "$base_dir/temp.json"
}

## CMS

boreas_cms_verify() {
    boreas
    mvn -B -s infrastructure/maven/settings.xml -Pcontinuous-integration --also-make --also-make-dependents test verify -pl ":${CMS_SERVICE_NAME}"
}

boreas_cms_grpc_build() {
    boreas_grpc_build "${CMS_SERVICE_NAME}"
}

boreas_cms_build() {
    boreas
    mvn compile -pl ":${CMS_SERVICE_NAME}" -am -U
}

boreas_cms_test() {
    boreas_component_test "${CMS_SERVICE_NAME}"
}

boreas_cms_test_loop() {
    local project="${CMS_SERVICE_NAME}"
    for i in `seq 1 5`; do
        echo "Starting test run ${i}"
        boreas_simple_clean
        boreas_cms_build > "${project}-output-${i}.txt" 2>&1 || echo "${project} compile FAILED on run ${i}"
        boreas_cms_test >> "${project}-output-${i}.txt" 2>&1 || echo "${project} FAILED on run ${i}"
    done
}

boreas_cms_start() {
    boreas
    mvn compile quarkus:dev -pl ":${CMS_SERVICE_NAME}" -am
}

boreas_cms_code_coverage() {
    boreas_component_code_coverage "${CMS_SERVICE_NAME}"
}

boreas_super_clean() {
    boreas
    mvn clean -DpurgeVolumes
}

boreas_cms_token() {
    boreas
    boreas_component_generate_jwt "${CMS_SERVICE_NAME}" "development"
}

## DB

boreas_psql() {
    docker exec -it boreas-local_postgres_1 /usr/bin/psql -U postgres -h localhost
}

boreas_stop_all_but_postgres() {
    docker ps -a | grep -v postgres | grep -v "CONTAINER ID" | awk '{print $1}' | xargs docker stop
}
