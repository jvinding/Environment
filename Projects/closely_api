WORKDIR=${HOME}/.grails/2.4.4/projects/api_develop/

is_api_dir() {
    [ -d .git ] && [ "git@github.com:lomain/api.git" = "$(git config --get remote.origin.url)" ]
}

api() {
    cly-cd-api
    ## java_use 1.8
    ## sdk use grails 2.4.4
}

__conditional_api() {
    is_api_dir || api
}

api_run() {
    __conditional_api

    local reloading=
    if [ "-r" == "$1" ]; then
        reloading="-reloading"
        shift
    fi

    local environment=development
    if [ "-e" = "$1" ] && [ -n "$2" ]; then
        if [ "staging" = "$2" ] || [ "qa" = "$2" ] || [ "production" = "$2" ]; then
            environment=$2
        else
            echo "invalid environment: '$2'" >&2
            return 1
        fi
    fi

    ./grailsw $reloading \
              -Dgrails.env=${environment} \
              run-app \
              --https \
              -Duser.timezone=UTC \
              -Xms700m \
              -XX:MaxPermSize=384m \
              -DgitBranch=develop \
              -Dgrails.project.work.dir=${WORKDIR}\
              -Xmx2824m \
              -Dserver.port=8081
}

api_rebuild() {
    __conditional_api
    ./grailsw clean && ./grailsw compile --refresh-dependencies --stacktrace
}

api_super_clean() {
    __conditional_api
    rm -rf ~/.grails/2.* target/ .slcache/
    if [ "-b" == "$1" ]; then
        api_rebuild
    fi
}

api_test_app() {
    __conditional_api
    ./grailsw test-app -Duser.timezone=UTC \
                       -Xms700m \
                       -XX:MaxPermSize=384m \
                       -DgitBranch=develop \
                       -Dgrails.project.work.dir=${WORKDIR}\
                       -Xmx2824m \
                       -Dserver.port=8081 \
                       "$@"
}

api_version() {
    aws --region us-east-1 elasticbeanstalk describe-environments --query 'Environments[*].[EnvironmentName, VersionLabel]' --environment-names api-qa api-staging --output text
    aws --region us-east-2 elasticbeanstalk describe-environments --query 'Environments[*].[EnvironmentName, VersionLabel]' --environment-names api-production --output text
}

alias api_db='psql -U directory -h localhost -d directory_develop'

alias api_clean="./grailsw clean -Dgrails.project.work.dir=$WORKDIR"
alias api_clean_workspace="rm -ri ${WORKDIR%%_develop/}_*"

api_db_drop() {
    __conditional_api
  for s in $(api_db -c '\d' | grep table | cut -d '|' -f 2); do
    api_db -c "drop table if exists $s cascade" > /dev/null
  done
}

api_db_load() {
    __conditional_api
  local branch=$(git_get_branch | tr '[:upper:]-./' '[:lower:]___')
  if [ "develop" != "$branch" ]; then
      psql -U admin -h localhost -d postgres -c"alter database directory_develop rename to directory_${branch}" || { echo "failed rename to directory_${branch}"; return 1; }
  fi

  cly-load-db $1 || { echo "failed cly-load-db"; }

  if [ "develop" != "$branch" ]; then
      psql -U admin -h localhost -d postgres -c"alter database directory_${branch} rename to directory_develop" || { echo "failed rename to directory_${branch}"; return 1; }
  fi
}

api_db_diff() {
    __conditional_api
  ./grailsw dbm-gorm-diff -DgitBranch=develop changelog-bob.groovy --stacktrace
}

alias api_shell="./grailsw -Duser.timezone=UTC -Xms700m -XX:MaxPermSize=384m -Xmx2824m -Dserver.port=8081 -DgitBranch=develop -Dgrails.project.work.dir=$WORKDIR shell"
